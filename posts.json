[
  {
    "id": "post_1756479665709",
    "title": "GitHub 更新日志：半静态博客的探索之旅",
    "category": "技术分享",
    "content": "大家好，这次我们尝试将 GitHub Pages 的静态部署能力与动态内容管理相结合，创建了一个“半静态”博客。\n\n## 为什么选择“半静态”？\n\nGitHub Pages 免费、稳定、CDN 加速。但它最大的限制是无法处理动态请求，这意味着传统的评论、用户登录、发帖等功能都无法直接实现。然而，通过一些巧妙的结合，我们可以鱼和熊掌兼得！\n\n<!--more-->\n\n我们目前实现了以下核心功能：\n\n### 1. 后台管理系统\n\n通过一个独立的 `admin.html`，管理员可以使用 GitHub Personal Access Token 直接管理文章、网站设置。\n\n*   **文章发布/编辑/删除**: 支持 Markdown 格式，同时可以插入图片。\n*   **网站配置**: 轻松修改博客标题、描述、主题颜色甚至背景图片。\n*   **图片上传**: 上传的图片会自动保存到 GitHub 仓库中，并通过 `gh-proxy` 优化加载速度。\n\n```javascript\n// 示例代码块\nwindow.addEventListener('hashchange', handleRouteChange);\nthis.handleRouteChange(); // Initial route handling\n\nconst main = async () => {\n    try {\n        // ... fetching logic ...\n    } catch (error) {\n        console.error('Error loading blog:', error);\n    }\n};\nmain();\n```\n\n### 2. 前端展示\n\n前端采用现代化的 Vue 3 框架构建，提供了更流畅的用户体验：\n\n*   **响应式设计**: 在PC、平板和手机上都能获得良好体验。\n*   **主题切换**: 一键切换明亮/暗黑模式，满足不同用户喜好。\n*   **文章筛选与搜索**: 快速找到感兴趣的内容。\n*   **评论系统集成**: 利用 `utterances` 或 `Gitalk`，基于 GitHub Issues/Discussions 实现用户评论，无需额外服务器！\n\n<img src=\"https://gh-proxy.com/https://raw.githubusercontent.com/rjdsq/rjdsq.github.io/main/blog/images/20250829T155143105Z_1000028067.png\" alt=\"示例图片：博客界面\"> \n\n### 3. 未来的展望\n\n*   **用户投稿功能**: 我们正在构思一个独立的后端服务，用于接收用户投稿，管理员审核后即可一键发布到博客。\n*   **插件系统**: 允许扩展更多自定义功能。\n\n这次的尝试，让我们看到了静态部署和强大功能的无限可能！\n\n继续探索，永不止步！\n",
    "tags": ["GitHub Pages", "前端", "后端", "静态网站", "博客", "Web开发"],
    "createdAt": "2025-08-29T15:01:05.709Z",
    "updatedAt": "2025-08-29T15:51:46.204Z"
  },
  {
    "id": "post_1700000000000",
    "title": "迎接未来：AI在下一代Web开发中的角色",
    "category": "AI与技术",
    "content": "人工智能正在以前所未有的速度改变我们的生活，Web开发也不例外。从智能代码补全到自动化测试，AI正逐步成为开发者不可或缺的工具。\n\n## AI如何赋能前端开发？\n\n*   **代码生成与优化**: AI助手可以根据需求快速生成组件、页面骨架，甚至优化现有代码的性能。\n*   **UI/UX设计**: AI驱动的设计工具可以根据用户偏好和数据分析自动生成设计稿，提升用户体验。\n*   **内容创作**: 智能写作工具可以辅助博主撰写文章、生成摘要，甚至翻译内容。\n\n<!--more-->\n\n### 智能后端服务\n\n对于需要动态功能的“半静态”博客，AI也可以在后端发挥作用。例如：\n\n1.  **自动化内容审核**: 对用户提交的评论或文章进行初步筛选，过滤垃圾信息。\n2.  **个性化推荐**: 根据用户浏览历史推荐相关文章。\n3.  **智能数据分析**: 分析网站流量、用户行为，提供优化建议。\n\n未来，我们有望看到更多AI与Web开发深度融合的应用，让开发变得更加高效、智能和个性化。\n\n```python\n# Python 示例：简单的AI模型接口\ndef predict_sentiment(text):\n    # 实际这里会调用NLP模型\n    if \"great\" in text.lower():\n        return \"positive\"\n    else:\n        return \"neutral\"\n\nprint(predict_sentiment(\"This is a great article!\"))\n```\n\n每一次技术革新都伴随着新的机遇与挑战，让我们拭目以待。\n",
    "tags": ["AI", "Web开发", "未来技术", "前端", "后端"],
    "createdAt": "2024-11-15T10:30:00.000Z",
    "updatedAt": "2024-11-15T10:30:00.000Z"
  }
]
